version: 2.1
orbs:
  python: circleci/python@1.5.0

jobs:
  build-and-test:
    docker:
      - image: cabreratoxy/pyopera:0.0.2
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Lint/Formatting/Testing/Coverage
          command: |
            black . --check --exclude={docs/,libOPERA_Py/}
            isort --check --diff . --skip={docs/,libOPERA_Py/}
            pylint $(find pyopera -name "*.py" | xargs)
            coverage run --source pyopera -m pytest
            coverage report --skip-empty --fail-under=85
  
  publish-docker-image:
    docker:
      - image: circleci/python
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build and push Docker image
          command: |
            echo ${CIRCLE_BUILD_NUM}
            if [ git diff --exit-code Dockerfile ]; then dockerfiles/build_docker.sh; else echo "Dockerfile did not change"; fi

  deploy-to-testpy:
    docker:
      - image: cabreratoxy/pyopera:0.0.2
    steps:
      - checkout
      - run:
          name: Deploy to Test Pypi
          # Add autoversioning here
          # poetry version patch
          command: |
            poetry config repositories.testpypi https://test.pypi.org/legacy/
            poetry publish --repository testpypi --build -u ${PYPI_USERNAME} -p ${TEST_PYPI}
  
  deploy-to-pypi:
    docker:
      - image: cabreratoxy/pyopera:0.0.2
    steps:
      - checkout
      - run:
          name: Deploy to Pypi
          # Add autoversioning here
          # poetry version patch
          command: |
            poetry config repositories.pypi https://upload.pypi.org/legacy/
            poetry publish --repository pypi --build -u ${PYPI_USERNAME} -p ${PYPI}


workflows:
  test-package:
    jobs:
      - build-and-test
      - publish-docker-image
      - deploy-to-testpy:
          requires:
            - build-and-test
          filters:
            branches:
              only: main
      - hold:
          type: approval
          requires:
            - build-and-test
          filters:
            branches:
              only: main
      - deploy-to-pypi:
          requires:
            - hold
          filters:
            branches:
              only: main
